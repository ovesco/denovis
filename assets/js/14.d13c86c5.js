(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{373:function(e,t,s){"use strict";s.r(t);var n=s(44),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"refreshing-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refreshing-services"}},[e._v("#")]),e._v(" Refreshing services")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("This functionnality is still in testing phase.")])]),e._v(" "),s("p",[e._v("When Diosaur resolves a dependency for a service, it will first resolve the dependency's dependencies,\ninstanciate it, and then inject it into your service. This is an expected behavior, but sometimes you\nneed some refreshed instances.")]),e._v(" "),s("h2",{attrs:{id:"singleton-with-non-singleton-dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#singleton-with-non-singleton-dependencies"}},[e._v("#")]),e._v(" Singleton with non-singleton dependencies")]),e._v(" "),s("p",[e._v("Let's take a singleton service which has a renewable dependency. Once the singleton is resolved,\nit's dependencies are built and injected in it, which means the renewable service is created once for\nit and injected.")]),e._v(" "),s("blockquote",[s("p",[e._v("The singleton will only know one single instance of a renewable service")])]),e._v(" "),s("p",[e._v("Same for custom scoped dependencies, whenever the singleton is resolved for the first time, its dependencies\nare resolved (if between scopes might be an unwanted instance) and never refreshed.")]),e._v(" "),s("h2",{attrs:{id:"refreshing-dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refreshing-dependencies"}},[e._v("#")]),e._v(" Refreshing dependencies")]),e._v(" "),s("p",[e._v("If you need to refresh your service dependencies, you can use the custom "),s("code",[e._v("refresh")]),e._v(" parameter of the "),s("code",[e._v("Inject")]),e._v(" or "),s("code",[e._v("InjectAll")]),e._v("\ndecorators.")]),e._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[e._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Service")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" scoping"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'renewable'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Renewable")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("readonly")]),e._v(" sym "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[e._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Service")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MyService")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[e._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Inject")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" refresh"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("private")]),e._v(" renewable"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Renewable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("renewable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sym "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("renewable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sym"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// false")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h2",{attrs:{id:"internals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#internals"}},[e._v("#")]),e._v(" Internals")]),e._v(" "),s("p",[e._v("In the background we're making use of "),s("a",{attrs:{href:"https://guigui.ch/articles/typescript-lazy-proxy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("lazy proxies"),s("OutboundLink")],1),e._v("\nto simulate this behavior and keep an expected API.")]),e._v(" "),s("p",[e._v("The attribute where you're supposed to find your service is replaced with a proxy\nthat will load the actual service instance every time it is accessed. Doing "),s("code",[e._v("this.renewable.sym")]),e._v(" from the previous\nexample is actually doing")]),e._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Renewable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sym\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);